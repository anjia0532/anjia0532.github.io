<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>家的博客</title>
  <subtitle>心安既吾乡</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//anjia.ml/"/>
  <updated>2017-02-04T05:06:45.290Z</updated>
  <id>//anjia.ml/</id>
  
  <author>
    <name>安家</name>
    <email>anjia0532@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="//anjia.ml/2017/02/03/hexo-github-pages-blog/"/>
    <id>//anjia.ml/2017/02/03/hexo-github-pages-blog/</id>
    <published>2017-02-03T08:07:16.000Z</published>
    <updated>2017-02-04T05:06:45.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h3><p><a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">安装Nodejs</a></p>
<p>默认安装在c盘,具体的默认参数可以通过 <code>npm config ls -l</code> 进行查看,输出类似下面的信息, 注意 <code>; ...</code> 开头的都是注释内容,不生效</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">; cli configs</div><div class="line">long = <span class="literal">true</span></div><div class="line">scope = <span class="string">""</span></div><div class="line">user-agent = <span class="string">"npm/4.0.5 node/v7.4.0 win32 x64"</span></div><div class="line"></div><div class="line">; <span class="built_in">builtin</span> config undefined</div><div class="line">; prefix = <span class="string">"C:\\Users\\&#123;userName&#125;\\AppData\\Roaming\\npm"</span> (overridden)</div><div class="line"></div><div class="line"></div><div class="line">; cache = <span class="string">"C:\\Users\\&#123;userName&#125;\\AppData\\Roaming\\npm-cache"</span> (overridden)</div><div class="line">cache-lock-retries = 10</div><div class="line">cache-lock-stale = 60000</div><div class="line">cache-lock-wait = 10000</div><div class="line">cache-max = null</div></pre></td></tr></table></figure>
<p>修改默认库路径</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm config <span class="built_in">set</span> cache <span class="string">"<span class="variable">$&#123;NodejsHome&#125;</span>\node_cache"</span> <span class="comment"># 将$&#123;NodejsHome&#125;换成实际安装路径</span></div><div class="line"></div><div class="line">npm config <span class="built_in">set</span> prefix <span class="string">"<span class="variable">$&#123;NodejsHome&#125;</span>"</span></div></pre></td></tr></table></figure>
<p><code>npm config set prefix</code> 设置成安装路径的好处是 <code>npm install -g xxx</code> 安装的库在执行时不会报命令找不到(否则还需要改系统的<code>Path</code>环境变量)</p>
<p>天朝网络环境比较差,需要使用 <a href="http://npm.taobao.org/" target="_blank" rel="external">淘宝npm镜像</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
<p>安装成功后,以后使用<code>npm install</code>的统统可以改成<code>cnpm install</code></p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>下载地址: <a href="http://git-scm.com/download/" target="_blank" rel="external">http://git-scm.com/download/</a></p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="built_in">cd</span> d:\blog <span class="comment"># 创建目录</span></div><div class="line"></div><div class="line">cnpm install hexo-cli -g <span class="comment"># 全局安装hexo</span></div><div class="line"></div><div class="line">hexo init <span class="comment"># 初始化当前目录(hexo init blog 创建blog并初始化)</span></div><div class="line"></div><div class="line">cnpm install <span class="comment"># 使用淘宝npm镜像加载依赖</span></div><div class="line"></div><div class="line">hexo g <span class="comment"># 生成静态代码</span></div><div class="line"></div><div class="line">hexo s <span class="comment"># 启动服务,在http://localhost:4000/查看</span></div></pre></td></tr></table></figure>
<p>打开 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 已经可以看到默认的一篇blog了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># 命令缩写</span></div><div class="line"></div><div class="line">hexo n == hexo new</div><div class="line"></div><div class="line">hexo g == hexo generate</div><div class="line"></div><div class="line">hexo s == hexo server</div><div class="line"></div><div class="line">hexo d == hexo deploy</div><div class="line"></div><div class="line"><span class="comment"># 命令组合</span></div><div class="line">hexo d -g <span class="comment"># 生成并部署</span></div><div class="line"></div><div class="line">hexo s -g <span class="comment"># 生成并本地预览</span></div></pre></td></tr></table></figure>
<p>如果是windows打开git-bash.exe</p>
<h3 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a>GitHub 配置</h3><h5 id="生成rsa文件"><a href="#生成rsa文件" class="headerlink" title="生成rsa文件"></a>生成rsa文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh-keygen</div><div class="line"></div><div class="line"><span class="comment"># 输入编译代码</span></div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/&#123;userName&#125;/.ssh/id_rsa): <span class="comment"># rsakey文件名,假设使用默认的id_rsa</span></div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): <span class="comment"># 密码</span></div><div class="line">Enter same passphrase again: <span class="comment">#确认密码</span></div></pre></td></tr></table></figure>
<h5 id="文本编辑器打开-ssh-id-rsa-pub-并复制内容"><a href="#文本编辑器打开-ssh-id-rsa-pub-并复制内容" class="headerlink" title="文本编辑器打开 ~/.ssh/id_rsa.pub 并复制内容"></a>文本编辑器打开 ~/.ssh/id_rsa.pub 并复制内容</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssh-rsa</div><div class="line"></div><div class="line">xxxx 具体的key xxxxxx  userName@email</div></pre></td></tr></table></figure>
<h5 id="github-设置ssh-key"><a href="#github-设置ssh-key" class="headerlink" title="github 设置ssh key"></a>github 设置ssh key</h5><p>左上角 用户-&gt;settings-&gt;Personal settings-&gt;SSH and GPG keys-&gt;New SSH key-&gt;Title 随意-&gt;Key 贴上一步的ssh-rsa开头的一串文本 -&gt;Add SSH key</p>
<h5 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h5><p>左上角 用户旁边 + 号-&gt;New repository-&gt;Repository name 填${userName}.github.io ${userName}为账号名-&gt;Create repository</p>
<h3 id="提交代码到github"><a href="#提交代码到github" class="headerlink" title="提交代码到github"></a>提交代码到github</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">git init <span class="comment"># 初始化本地仓库</span></div><div class="line"></div><div class="line">git add . <span class="comment"># 添加文件</span></div><div class="line"></div><div class="line">git commit -m <span class="string">'初始化'</span> <span class="comment"># 提交到本地仓库并指定message</span></div><div class="line"></div><div class="line">git checkout -b blog-source <span class="comment"># 创建分支,为了使用 travis-ci 自动构建</span></div><div class="line"></div><div class="line">git remote add origin git@github.com:<span class="variable">$&#123;userName&#125;</span>/<span class="variable">$&#123;userName&#125;</span>.github.io.git <span class="comment"># 添加远程仓库地址 将 $&#123;userName&#125; 替换成实际账户名</span></div><div class="line"></div><div class="line">git push origin blog-source:blog-source <span class="comment"># 推送到github远程仓库分支</span></div></pre></td></tr></table></figure>
<p>创建 <code>.travis.yml</code> 文件</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="attr">language:</span> node_js</div><div class="line"><span class="attr">node_js:</span> stable</div><div class="line"></div><div class="line"><span class="comment"># S: Build Lifecycle</span></div><div class="line"><span class="attr">install:</span></div><div class="line"><span class="bullet">  -</span> npm install</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#before_script:</span></div><div class="line"> <span class="comment"># - npm install -g gulp</span></div><div class="line"></div><div class="line"><span class="attr">script:</span></div><div class="line"><span class="bullet">  -</span> hexo g</div><div class="line"></div><div class="line"><span class="attr">after_script:</span></div><div class="line"><span class="bullet">  -</span> cd ./public</div><div class="line"><span class="bullet">  -</span> git init</div><div class="line"><span class="bullet">  -</span> git config user.name <span class="string">"$&#123;userName&#125;"</span></div><div class="line"><span class="bullet">  -</span> git config user.email <span class="string">"$&#123;email&#125;"</span></div><div class="line"><span class="bullet">  -</span> git add .</div><div class="line"><span class="bullet">  -</span> git commit -m <span class="string">"Update docs"</span></div><div class="line"><span class="bullet">  -</span> git push --force --quiet <span class="string">"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;"</span> master:master</div><div class="line"></div><div class="line"><span class="attr">branches:</span></div><div class="line"><span class="attr">  only:</span></div><div class="line"><span class="bullet">    -</span> blog-source</div><div class="line"><span class="attr">env:</span></div><div class="line"><span class="attr"> global:</span></div><div class="line"><span class="attr">   - GH_REF:</span> github.com/$&#123;userName&#125;/$&#123;userName&#125;.github.io.git</div></pre></td></tr></table></figure>
<p>将${userName}和${email}替换成实际值</p>
<p>参考 <a href="http://www.jianshu.com/p/e22c13d85659" target="_blank" rel="external">简书-手把手教你使用Travis CI自动部署你的Hexo博客到Github上</a></p>
<p>通过travis自动构建并发布</p>
<h3 id="使用https-自定义域名"><a href="#使用https-自定义域名" class="headerlink" title="使用https 自定义域名"></a>使用https 自定义域名</h3><p><a href="https://zhuanlan.zhihu.com/p/22667528" target="_blank" rel="external">开启 Github Pages 自定义域名 HTTPS 和 HTTP/2 支持​</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置环境&quot;&gt;&lt;a href=&quot;#配置环境&quot; class=&quot;headerlink&quot; title=&quot;配置环境&quot;&gt;&lt;/a&gt;配置环境&lt;/h2&gt;&lt;h3 id=&quot;Nodejs&quot;&gt;&lt;a href=&quot;#Nodejs&quot; class=&quot;headerlink&quot; title=&quot;Nodej
    
    </summary>
    
    
  </entry>
  
</feed>
