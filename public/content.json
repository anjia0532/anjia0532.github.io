[{"title":"hexo搭建博客","date":"2017-02-03T08:07:16.000Z","path":"2017/02/03/hexo-github-pages-blog/","text":"配置环境Nodejs安装Nodejs 默认安装在c盘,具体的默认参数可以通过 npm config ls -l 进行查看,输出类似下面的信息, 注意 ; ... 开头的都是注释内容,不生效 123456789101112131415; cli configslong = truescope = \"\"user-agent = \"npm/4.0.5 node/v7.4.0 win32 x64\"; builtin config undefined; prefix = \"C:\\\\Users\\\\&#123;userName&#125;\\\\AppData\\\\Roaming\\\\npm\" (overridden); cache = \"C:\\\\Users\\\\&#123;userName&#125;\\\\AppData\\\\Roaming\\\\npm-cache\" (overridden)cache-lock-retries = 10cache-lock-stale = 60000cache-lock-wait = 10000cache-max = null 修改默认库路径 1234npm config set cache \"$&#123;NodejsHome&#125;\\node_cache\" # 将$&#123;NodejsHome&#125;换成实际安装路径npm config set prefix \"$&#123;NodejsHome&#125;\" npm config set prefix 设置成安装路径的好处是 npm install -g xxx 安装的库在执行时不会报命令找不到(否则还需要改系统的Path环境变量) 天朝网络环境比较差,需要使用 淘宝npm镜像 12npm install -g cnpm --registry=https://registry.npm.taobao.org 安装成功后,以后使用npm install的统统可以改成cnpm install Git下载地址: http://git-scm.com/download/ Hexo123456789101112cd d:\\blog # 创建目录cnpm install hexo-cli -g # 全局安装hexohexo init # 初始化当前目录(hexo init blog 创建blog并初始化)cnpm install # 使用淘宝npm镜像加载依赖hexo g # 生成静态代码hexo s # 启动服务,在http://localhost:4000/查看 打开 http://localhost:4000/ 已经可以看到默认的一篇blog了 123456789101112131415# 命令缩写hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy# 命令组合hexo d -g # 生成并部署hexo s -g # 生成并本地预览 如果是windows打开git-bash.exe GitHub 配置生成rsa文件1234567ssh-keygen# 输入编译代码Enter file in which to save the key (/c/Users/&#123;userName&#125;/.ssh/id_rsa): # rsakey文件名,假设使用默认的id_rsaEnter passphrase (empty for no passphrase): # 密码Enter same passphrase again: #确认密码 文本编辑器打开 ~/.ssh/id_rsa.pub 并复制内容123ssh-rsaxxxx 具体的key xxxxxx userName@email github 设置ssh key左上角 用户-&gt;settings-&gt;Personal settings-&gt;SSH and GPG keys-&gt;New SSH key-&gt;Title 随意-&gt;Key 贴上一步的ssh-rsa开头的一串文本 -&gt;Add SSH key 创建仓库左上角 用户旁边 + 号-&gt;New repository-&gt;Repository name 填${userName}.github.io ${userName}为账号名-&gt;Create repository 提交代码到github123456789101112git init # 初始化本地仓库git add . # 添加文件git commit -m '初始化' # 提交到本地仓库并指定messagegit checkout -b blog-source # 创建分支,为了使用 travis-ci 自动构建git remote add origin git@github.com:$&#123;userName&#125;/$&#123;userName&#125;.github.io.git # 添加远程仓库地址 将 $&#123;userName&#125; 替换成实际账户名git push origin blog-source:blog-source # 推送到github远程仓库分支 创建 .travis.yml 文件 1234567891011121314151617181920212223242526272829language: node_jsnode_js: stable# S: Build Lifecycleinstall: - npm install#before_script: # - npm install -g gulpscript: - hexo gafter_script: - cd ./public - git init - git config user.name \"$&#123;userName&#125;\" - git config user.email \"$&#123;email&#125;\" - git add . - git commit -m \"Update docs\" - git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\" master:masterbranches: only: - blog-sourceenv: global: - GH_REF: github.com/$&#123;userName&#125;/$&#123;userName&#125;.github.io.git 将${userName}和${email}替换成实际值 参考 简书-手把手教你使用Travis CI自动部署你的Hexo博客到Github上 通过travis自动构建并发布 使用https 自定义域名开启 Github Pages 自定义域名 HTTPS 和 HTTP/2 支持​","tags":[]}]